[profile.default]
allow_paths = ["src", "test", "script", "lib"]
ast = true
auto_detect_solc = false
build_info = true
bytecode_hash = "none"
dynamic_test_linking = true
evm_version = "cancun"
extra_output = [
    "storageLayout",
    "metadata",
    "ir",
    "irOptimized",
    "evm.assembly",
]
ffi = true
fs_permissions = [
    { access = "read", path = "./broadcast" },
    { access = "read", path = "./cache" },
    { access = "read", path = "./out" },
]
fuzz = { runs = 1000, seed = "0x0000000000000000000000000000000000000000000000000000000000000000" }
invariant = { runs = 10, depth = 50, fail_on_revert = false }
gas_reports = ["*"]
libs = ["lib"]
solc_version = "0.8.28"
src = "src"
optimizer = true
optimizer-runs = 1
out = "out"
sparse_mode = true
test = "test"
via_ir = true

[profile.default.fmt]
bracket_spacing = true
int_types = "long"
line_length = 120
multiline_func_header = "all"
number_underscore = "thousands"
quote_style = "double"
solc_imports = true
tab_width = 4
wrap_comments = true

[profile.default.rpc_endpoints]
localhost = "http://localhost:8545"
base_sepolia = "https://base-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
base = "https://base.g.alchemy.com/v2/${ALCHEMY_API_KEY}"

[profile.default.etherscan]
base_sepolia = { key = "${ETHERSCAN_API_KEY}", url = "https://api-sepolia.basescan.org/api" }
base = { key = "${ETHERSCAN_API_KEY}", url = "https://api.basescan.org/api" }

[profile.coverage]
optimizer = true
optimizer-runs = 1
via_ir = true
fuzz = { runs = 100, seed = "0x0000000000000000000000000000000000000000000000000000000000000000" }
invariant = { runs = 5, depth = 10 }
extra_output = []
gas_reports = []
sparse_mode = false

[profile.ci]
extra_output = [
    "storageLayout",
    "metadata",
    "ir",
    "irOptimized",
    "evm.assembly",
]
fuzz = { runs = 1_000, seed = "0x0000000000000000000000000000000000000000000000000000000000000000" }
gas_reports = ["*"]
optimizer = true
optimizer-runs = 200
verbosity = 4
via_ir = true

[profile.prod]
bytecode_hash = "ipfs"
extra_output = ["metadata"]
gas_reports = []
optimizer = true
optimizer-runs = 1_000
via_ir = true
